Analisis 'product.category'

Geminis
Declaramos el modelo a impactar

Creamos conxion a BBDD origen
    1 - Utilizamos .models_use() para identificar campos y su uso en el proyecto.
    Determinamos campos usados "field_use", campos sin usos "field_no_used" y de sistema "field_system"
    2 - Los campos o2m y m2m no se migran en primera instancia, los discrimonamos ejecutando .models_fields_types(field_use)
    Agregamos campos o2m y m2m a "field_special" para campos de primer migracion
    3 - Cargamos campo en "field_ignore" y "field_special" volvemos a correr .models_use(field_ignore+field_special).
    Cargamos los campos utilizados en "field_use_check"


Creamos conexxion a BBDD destino
    1 - Utilizamos .models_compare_fields(field_list_check). Obtenemos keys_coincidentes, keys_s_coincidentes y keys_destino
    2 - Determinamos los campos a cambiar sus keys_s_coincidentes
    3 - Sin campos a cambiar

Leemos los datos de origen
    Ejecutamos "data_g = clientes_origen_g.mass_read_data(field_list_check)" para obtener los datos de origen.

Creamos los datos en BBDD destino
    Ejecutamos cliente_destino.mass_create_reg(data_g)

Errores corregidos
    1 - 'property_stock_journal' no existen diarios
        Se elimina campo hasta que no se creen diarios
    2 - 'property_account_income_categ_id', # no existe '4.1.01.00.010 Venta de mercaderia'
        Se elimina campo hasta que no se cargue diarios.
    3 - 'property_account_expense_categ_id', # No existe '4.1.01.02.010 Compra de mercaderÃ­a'
        Se elimina campo hsata que haya diarios
    4 - # "parent_id", # hay parent id

Rake
Repetimos proceso de Geminis

Creamos conexxion a BBDD destino
    1 - Utilizamos .models_compare_fields(field_list_check). Obtenemos keys_coincidentes, keys_s_coincidentes y keys_destino
    2 - Determinamos los campos a cambiar sus keys_s_coincidentes 
        image => image_1920
        image_medium => image_1024
        image_small => image_128
        pos_categ_id => pos_categ_ids

Leemos los datos de origen
    Ejecutamos "data_r = clientes_origen_r.mass_read_data(field_list_check)" para obtener los datos de origen.
    Realizamos todos los cambios de keys sobre
        .change_data_keys(data_r, 'image', 'image_1920')
        .change_data_keys(data_r, 'image_medium', 'image_1024')
        .change_data_keys(data_r, 'image_small', 'image_128')
        .change_data_keys(data_r, 'pos_categ_id', 'pos_categ_ids')

Cambiamos valor en company
    Ejecutamos .change_data_values(data_r, 'company_id', 2) para cambiar el valor de "company_id" a 2

Creamos los datos en BBDD destino
    Ejecutamos cliente_destino.mass_create_reg(data_g)

